{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>Welcome! </p> <p>Here you can find the documentation for ES-Progress Bash Library. It aims to provide comprehensive guidance on using this library.</p> <p>The library consists of standalone shell scripts, referred to here as \"binaries\" (<code>bin/</code>)  and various shell functions (<code>lib/</code>). Certain functions are designed for interactive use on the command line, while others are better suited for sourcing in scripts. It was written with Bash in mind therefore portability was not a requirement.</p> <p>First, check the Installation instructions. Though most of the \"binaries\" are intended for standalone use and can be simply downloaded and run, some of them use functions from the function library (<code>lib/</code>), so bootstrapping may not be trivial and require additional setup.</p> <p>Then you can find the reference documentation for each script and function.</p> <p>Note</p> <p>This project is licensed under the MIT license, so feel free to copy or use for inspirations! </p> <p>Also PRs are always welcomed!</p>"},{"location":"bin/","title":"Bin","text":"<p>Various scripts that can be used as \"binaries\".</p>"},{"location":"bin/#backup","title":"backup","text":"<p>A wrapper for <code>rsync</code>. Backups source directory to a different file system (drive) as backing up on the same drive sort of defies the goal of backup. In archive mode, backups are compressed to save disk space. This compression is done by <code>pigz</code> which creates standard <code>gzip</code> files but spreads the work over multiple processors and cores when compressing so it can utilize modern hardware.</p> <p>Modes:</p> <ul> <li>Archive<ol> <li>Copy files to destination dir (<code>rsync</code>)</li> <li>Create single archive file from backed up files (<code>tar</code> &amp; <code>pigz</code>)</li> <li>Rotate (delete) old archives (<code>find</code>)</li> </ol> </li> <li>Quick: only copy files to destination.</li> <li>Snapshot: backup only changed files from last backup.   Not changed files get hard-linked from previous run so you can access them normally &amp; restore easily but using way less disk space.   This is a quick and efficient way to create many backups.</li> </ul> <p>Usage</p> <pre><code>backup REQUIRED_OPTIONS... [OPTIONS]...\n\nOPTIONS\n\nREQUIRED\n-s, --source [DIR]         Source DIRECTORY to backup\n-d, --destination [DIR]    Destination DIRECTORY to put backup on\n                           target filesystem (relative to mounting point)\n-f, --filesystem [FS]      Target FILESYSTEM to backup to (eg. /dev/sda3)\n-m, --mount [DIR]          Mounting point for given filesystem\n\nOPTIONAL\n-a, --archive [DIR]        Put archives in DIR, defaults to 'archive'\n    --expire [NUM]         Deletes archives older than NUM days (NUM*24 hours)\n    --format [FORMAT]      Appends current date to archive filename\n                           Supported FORMATS:\n                               24H  (HH:MM:SS eg. 17:26:14)\n                               YMD  (YYYY-mm-dd eg. 2020-02-19)       &lt;--default\n                               FULL (YYYY-mm-dd_HH:MM:SS)\n    --mode [MODE]          Select MODE:\n                               ARCHIVE:  backup and create archives  &lt;--default\n                               SNAPSHOT: snapshot backup\n                               QUICK:    backup only\n    --exclude [PATTERN]    Exclude files matching PATTERN\n    --prefix [STRING]      Optional prefix on archive files\n-q, --quiet                Suppress non-error messages\n    --debug                Print commands as executed\n-h, --help                 Display this help\n-v, --version              Print version info\n</code></pre>"},{"location":"bin/#benchmark","title":"benchmark","text":"<p>A wrapper and runner for <code>sysbench</code>. You can design multiple test runs with different test parameters, so you can benchmark the system for:</p> <ul> <li>CPU</li> <li>Memory</li> <li>Disks</li> <li>Download speed</li> </ul> <p>in a single script.</p> <p>Default test parameters are provided but you can override them in a params file. This file is sourced during execution so you can change parameters by setting new values to config variables found in \"CONFIG\" section. For parameter formats check said section in the script (Bash syntax).</p> <p>An example params file:</p> <pre><code># Let's have bit longer tests\ntest_run_time_quick=20\n# Run only one deep memory benchmark\nruns_memory_deep=()\nruns_memory_deep+=(\"1;512;30G;rnd\")\n</code></pre> <p>Info</p> <p>This script is completely standalone, no bootstrapping is required, just copy to target system and start benchmarking! </p> <p>Usage</p> <pre><code>Usage: benchmark [OPTIONS]...\n\nOPTIONS\n\n-c, --cpu\n-m, --memory\n-d, --disk\n    --download\n                       Run appropriate test. If no test specified, all will run.\n                       Ignored if '-s' given.\n-s, --system           Run only a system check\n-r, --report           Save test report to file\n    --report-prefix    Report file prefix, implies '-r'\n-q, --quick            Do a quick benchmark. Ignored if '-s' given.\n    --deep             Deep benchmarking. Ignored if '-s' given.\n-p, --params           Config file to override test parameters\n\n-h, --help             Display this help\n-v, --version          Print version\n</code></pre>"},{"location":"bin/#clean","title":"clean","text":"<p>Clean-up temporary and other not needed files to free up disk space:</p> <ul> <li>Remove unused <code>apt</code> packages</li> <li>Remove old snaps</li> <li>Rotate system journal (keep 2 weeks of logs)</li> <li>Flush system caches</li> </ul> <p>Info</p> <p>This script is completely standalone, no bootstrapping is required! Perfect to run weekly by cron.</p> <p>Needs root permissions.</p> <p>Usage</p> <pre><code>Usage: clean [OPTIONS]...\n\nOPTIONS\n\n-j, --journal [TIME]       Remove journal older than this time\n                           specified with the usual \"s\", \"m\", \"h\", etc. suffixes.\n                           Defaults to 2 weeks (2w).\n-q, --quiet                Suppress non-error messages\n-h, --help                 Display this help\n-v, --version              Print version info\n</code></pre>"},{"location":"bin/#generate-moduli","title":"generate-moduli","text":"<p>Regenerate Diffie-Hellman groups used for the \"Diffie-Hellman Group Exchange\" key exchange method. This can be used for OpenSSH server (<code>/etc/ssh/moduli</code>).</p> <p>Warning</p> <p>This is possibly a long running process!</p> <p>Usage</p> <pre><code>Usage: generate-moduli [BITS] [OUTPUT]\n\nParams:\nBITS               Comma-separated list of size of prime in bits to generate.\n                   Defaults to 4096,6144,7680,8192\nOUTPUT             Output generated primes to this file.\n                   Defaults to \"DH_moduli\" in current dir\n</code></pre>"},{"location":"bin/#pass-man","title":"pass-man","text":"<p>Manages a <code>pass</code> password store located inside a <code>tomb</code>.</p> <p>Available actions:</p> <ul> <li>open: open password store in tomb</li> <li>close: close password store</li> <li>generate: generate a password but not save it as a pass. Useful if you just need a strong key.</li> <li>retrieve: get password from store</li> </ul> <p>Usage</p> <pre><code>Usage: pass-man ACTION [TARGET] [EXTRA]...\n\nParams:\nACTION             Action to perform (open, close, generate, retrieve)\nTARGET             Path to password in the password store (mandatory for the 'retrieve' action)\nEXTRA              Extra arguments to 'pass'\n</code></pre>"},{"location":"bin/#sign-kernel-modules","title":"sign-kernel-modules","text":"<p>Sign kernel modules with a Machine Owner Key (MOK). Some modules are not signed by Ubuntu, so kernel won't load them. After signing they can be loaded with <code>modprobe</code>.</p> <p>You need a MOK key and certificate, which must be enrolled in EFI:</p> <ol> <li>Generate MOK key     <pre><code>openssl genpkey -algorithm rsa -out MOK_KEY\n</code></pre></li> <li>Create MOK certificate     <pre><code>openssl req -new -x509 -key MOK_KEY -outform DER -out MOK_CERT\n</code></pre></li> <li>Enroll MOK certificate     <pre><code>mokutil --import MOK_CERT\n</code></pre></li> <li> Reboot and complete the enrollment</li> </ol> <p>Usage</p> <pre><code>Usage: sign-kernel-modules MODULE KEY CERT\n\nParams:\nMODULE             Module to sign (e.g. vboxdrv)\nKEY                MOK private key file\nCERT               MOK certificate file\n</code></pre>"},{"location":"bin/#test-dd-write","title":"test-dd-write","text":"<p>Test 'dd' write speed with different block sizes. This way you can optimize block size for fastest write operation.</p> <p>Usage</p> <pre><code>Usage: test-dd-write\n</code></pre>"},{"location":"bin/#wrecho","title":"wrecho","text":"<p>A wrapper for <code>echo</code>. All it does is echo the contents of an environment variable: <code>ECHO_WRAP</code>. Useful if you need to send a string to some application, but it can receive that only from a script.</p> <p>Example:</p> <pre><code>export ECHO_WRAP=password\nexport SSH_ASKPASS=/path/to/wrecho\nssh-add SSH_KEY &lt;/dev/null\n</code></pre> <p>Usage</p> <pre><code>Usage: ECHO_WRAP=\"some string to echo\" wrecho\n</code></pre>"},{"location":"install/","title":"Installation","text":"<p>Library functions are organized by category into smaller files (<code>lib/*.sh</code>), so they're easier to manage. Functions often depend on each other, making it necessary to source several files to define all functions.</p> <p>Yet it's possible to include only the necessary lib files in a script, it's generally easier to load them all. For this purpose there is a loader (<code>lib/_loader.sh</code>). Simply source this file, and it will automatically source all other libraries.</p> <p>In the supplied scripts (<code>bin/</code>), the loader is referenced by an environment variable (<code>ES_SHELL_LOADER</code>). It's recommended to use this env var in your scripts as well.</p> <p>For detailed instructions on using the loader, check Reference.</p> <p>Installation steps</p> <ol> <li>Clone Git repository     <pre><code>git clone https://github.com/es-progress/shell.git SHELL_DIR\n</code></pre></li> <li>Set <code>ES_SHELL_LOADER</code> to point to <code>lib/_loader.sh</code>. It's best to add this to your <code>.bashrc</code>.     <pre><code>export ES_SHELL_LOADER=\"SHELL_DIR/lib/_loader.sh\"\n</code></pre></li> <li>(Optional) Add <code>bin</code> to your <code>PATH</code> to run scripts by name     <pre><code>PATH=\"SHELL_DIR/bin:${PATH}\"\n</code></pre></li> </ol> <p>Tip</p> <p>Source loader in your <code>.bashrc</code> and all functions will be ready to use in your terminal. In fact, some of them are for interactive use on the command line!</p>"},{"location":"nav/","title":"Nav","text":"<ul> <li>Home</li> <li>Installation</li> <li>Reference<ul> <li>Bin</li> <li>Lib<ul> <li>Analytics</li> <li>Certificates</li> <li>Database</li> <li>Dev Tools</li> <li>Error Handling</li> <li>Files</li> <li>Git</li> <li>GitHub CLI</li> <li>Loader</li> <li>Network</li> <li>Process</li> <li>SSH</li> <li>Text Processing</li> <li>User Interface</li> </ul> </li> </ul> </li> </ul>"},{"location":"lib/_loader/","title":"Loader","text":"<p>A helper to bootstrap libraries. This file sources all library files so functions will be defined and available. Basically, you need to source this file in any script where you want to use library functions.</p> <p>Also, you can extend this loader to load your local library files too! Create your loader script that sources the local libraries and just point <code>ES_SHELL_LOADER_LOCAL</code> environment variable to it (e.g. <code>ES_SHELL_LOADER_LOCAL=$HOME/.local/lib/my_loader.sh</code>), and they will be sourced.</p> <p>Usage in scripts</p> <pre><code># Source loader\n. /path/to/shell/lib/_loader.sh\n\n# Or use the envvar (recommended for maintainability &amp; portability)\n. \"${ES_SHELL_LOADER}\"\n\n# Now functions are defined\ncheck-root\nerror-exit \"Nothing to do\"\n</code></pre> <p>If you use the envvar method, you need to set <code>/path/to/shell/lib/_loader.sh</code> in <code>ES_SHELL_LOADER</code>. You can do this in your <code>.bashrc</code> or when running a script:</p> <pre><code>ES_SHELL_LOADER=/path/to/lib/_loader.sh backup\n</code></pre> <p>Tip</p> <p>Source loader in your <code>.bashrc</code> and all functions are ready to use in your terminal. Actually some of them are meant for interactive use on the command line!</p> <p>You can read more about bootstrapping in Installation instructions.</p>"},{"location":"lib/analytics/","title":"Analytics","text":"<p>Functions for statistics and analysis.</p>"},{"location":"lib/analytics/#anal-disk-usage","title":"anal-disk-usage","text":"<p>Analyze disk usage. Display the disk space used by each subdirectory in any directory in ascending order. Additionally, it reports the percentage of the total size occupied by each sub-directory.</p> <p>Usage</p> <pre><code>anal-disk-usage [DIR]\n\nParams:\nDIR                Directory to check. Defaults to current working dir.\n</code></pre>"},{"location":"lib/certificate/","title":"Certificate","text":"<p>Functions for managing X509 certificates &amp; keys. It essentially serves as a wrapper for <code>openssl</code>.</p> <p>These functions offer a way to set up your own Certificate Authority (CA) and issue X509 Certificates (a standard defining the format of public key certificates) on your behalf which are useful for TLS (Transport Layer Security). Only your Root CA certificate needs to be trusted by clients, and all your issued certificates will be trusted too. It may not be trusted by anyone except you. So it can't be used for public sites. However, it's great for internal use and Dev/CI environments.</p>"},{"location":"lib/certificate/#cert-create","title":"cert-create","text":"<p>Create an X509 certificate by combining <code>csr-create</code> and <code>csr-sign</code>. Use the subject to insert any details about the site.</p> <p>Subject example: <code>/C=CountryCode/ST=State/L=City/O=Your Company/CN=Your site URL</code>.</p> <p>Usage</p> <pre><code>cert-create KEY SUBJECT CA_KEY CA_CERT CERT VALIDITY [KEY_TYPE]\n\nParams:\nKEY                Filename of private key\nSUBJECT            Certificate subject\nCA_KEY             Filename of CA private key to sign a certificate with\nCA_CERT            Filename of CA certificate to be used for signing\nCERT               Filename for newly created certificate\nVALIDITY           Certificate validity in days\nKEY_TYPE           Comma-separated list of private key algorithm and options.\n                   Default: RSA,rsa_keygen_bits:4096\n</code></pre>"},{"location":"lib/certificate/#cert-key","title":"cert-key","text":"<p>Create a 4096-bit RSA private key.</p> <p>Usage</p> <pre><code>cert-key KEY [EXTRA]...\n\nParams:\nKEY                Filename to write the newly created private key to\nEXTRA              Optional extra params to 'openssl-genpkey'\n</code></pre>"},{"location":"lib/certificate/#cert-selfsigned","title":"cert-selfsigned","text":"<p>Create self-signed certificate. This could be used as a Root CA certificate. Use the subject to insert any details about the certificate.</p> <p>Subject example: <code>/C=CountryCode/ST=State/L=City/O=ACME Company/CN=ACME Root CA</code>.</p> <p>Usage</p> <pre><code>cert-selfsigned KEY CERT VALIDITY SUBJECT [EXTRA]...\n\nParams:\nKEY                Filename of private key\nCERT               Filename for newly created certificate\nVALIDITY           Certificate validity in days\nSUBJECT            Certificate subject\nEXTRA              Optional extra params to 'openssl-req'\n</code></pre>"},{"location":"lib/certificate/#cert-view","title":"cert-view","text":"<p>Inspect a certificate. Print certificate to stdout.</p> <p>Usage</p> <pre><code>cert-view CERT [EXTRA]...\n\nParams:\nCERT               Path to certificate\nEXTRA              Optional extra params to 'openssl-x509'\n</code></pre>"},{"location":"lib/certificate/#csr-create","title":"csr-create","text":"<p>Create a Certificate Signing Request (CSR). Use the subject to insert any details about the site.</p> <p>Subject example: <code>/C=CountryCode/ST=State/L=City/O=Your Company/CN=Your site URL</code>.</p> <p>Usage</p> <pre><code>csr-create KEY CSR SUBJECT [EXTRA]...\n\nParams:\nKEY                Filename to write the newly created private key to\nCSR                Filename for newly created CSR\nSUBJECT            Certificate subject\nEXTRA              Optional extra params to 'openssl-req'\n</code></pre>"},{"location":"lib/certificate/#csr-sign","title":"csr-sign","text":"<p>Sign a Certificate Signing Request (CSR).</p> <p>Usage</p> <pre><code>csr-sign CA_KEY CA_CERT CSR CERT VALIDITY [EXTRA]...\n\nParams:\nCA_KEY             Filename of CA private key to sign a certificate with\nCA_CERT            Filename of CA certificate to be used for signing\nCSR                Filename of CSR to sign\nCERT               Filename for newly created signed CSR (which is a certificate now)\nVALIDITY           Certificate validity in days\nEXTRA              Optional extra params to 'openssl-x509'\n</code></pre>"},{"location":"lib/certificate/#csr-view","title":"csr-view","text":"<p>Inspect a Certificate Signing Request (CSR). Print CSR to stdout.</p> <p>Usage</p> <pre><code>csr-view CSR [EXTRA]...\n\nParams:\nCSR                Path to CSR to check\nEXTRA              Optional extra params to 'openssl-req'\n</code></pre>"},{"location":"lib/db/","title":"Database","text":"<p>Functions for managing MySQL databases (DB), including data export, structure export, querying, and more.</p>"},{"location":"lib/db/#db-dump-data-db","title":"db-dump-data-db","text":"<p>Dump the full DB. Only data (each record on a separate row) are exported with no table structures. This can be valuable for debugging, as it enables readable diffs for changes in data.</p> <p>Usage</p> <pre><code>db-dump-data-db DB [EXTRA]...\n\nParams:\nDB                 Database name\nEXTRA              Optional extra params to 'mysqldump'\n</code></pre>"},{"location":"lib/db/#db-dump-data-tables","title":"db-dump-data-tables","text":"<p>Dump specific tables from the DB. Only data (each record on a separate row) are exported with no table structures. This could be useful for debugging as it allows a readable diff for changes in data. Also for export-change-import operations.</p> <p>Usage</p> <pre><code>db-dump-data-tables DB TABLE...\n\nParams:\nDB                 Database name\nTABLE              Tables to export\n</code></pre>"},{"location":"lib/db/#db-dump-full-db","title":"db-dump-full-db","text":"<p>Dump the full DB (data in compact form + table structures). This could be used for backups and migrations.</p> <p>Usage</p> <pre><code>db-dump-full-db DB [EXTRA]...\n\nParams:\nDB                 Database name\nEXTRA              Optional extra params to 'mysqldump'\n</code></pre>"},{"location":"lib/db/#db-dump-full-tables","title":"db-dump-full-tables","text":"<p>Dump specific tables from DB. Data in compact form and table structure is exported also.</p> <p>Usage</p> <pre><code>db-dump-full-tables DB TABLE...\n\nParams:\nDB                 Database name\nTABLE              Tables to export\n</code></pre>"},{"location":"lib/db/#db-dump-structure-db","title":"db-dump-structure-db","text":"<p>Dump full DB structure. No data exported.</p> <p>Usage</p> <pre><code>db-dump-structure-db DB [EXTRA]...\n\nParams:\nDB                 Database name\nEXTRA              Optional extra params to 'mysqldump'\n</code></pre>"},{"location":"lib/db/#db-dump-structure-tables","title":"db-dump-structure-tables","text":"<p>Dump specific table structures from DB. No data exported.</p> <p>Usage</p> <pre><code>db-dump-structure-tables DB TABLE...\n\nParams:\nDB                 Database name\nTABLE              Tables to export\n</code></pre>"},{"location":"lib/db/#db-dump-wrapper","title":"db-dump-wrapper","text":"<p>Base wrapper for <code>mysqldump</code>. The other specific dumper functions add parameters to this function to achieve desired behaviour.</p> <p>Usage</p> <pre><code>db-dump-wrapper PARAMS...\n\nParams:\nPARAMS             Parameters to 'mysqldump'\n</code></pre>"},{"location":"lib/db/#db-list-tables","title":"db-list-tables","text":"<p>List all tables in a Database, each table on a new line for easy further processing. Tables can be filtered by pattern where SQL style wildcards are allowed.</p> <p>Usage</p> <pre><code>db-list-tables DB PATTERN\n\nParams:\nDB                 Database name\nPATTERN            Pattern to filter tables.\n                   SQL wildcards are allowed, e.g. '%cache%'.\n</code></pre>"},{"location":"lib/db/#db-query","title":"db-query","text":"<p>Execute single queries on a database, or multiple databases if DB name contains SQL style wildcard <code>%</code>.</p> <p>Usage</p> <pre><code>db-query DB QUERY [EXTRA]...\n\nParams:\nDB                 Database name or pattern (with % as wildcard - SQL style)\nQUERY              Query to execute\nEXTRA              Optional extra params to 'mysql'\n</code></pre>"},{"location":"lib/db/#db-replace","title":"db-replace","text":"<p>Replace all occurences of a string in a Database table. This is basically an ETL (extract-transform-load) operation. Table is dumped first, then <code>sed</code> substitution and changed data imported finally. Import means dropping and recreating table with new data.</p> <p>Basic Regular Expressions (BRE; no <code>-r</code> switch) is used for <code>sed</code> so <code>+</code>, <code>?,</code> and <code>(</code>, <code>)</code> treated literal. Delimiter for <code>sed</code> substition command can be changed as well, it defaults to <code>@</code> so strings can't contain <code>@</code> character. If your string contains that character you can select a different delimiter that is not found in search or replace strings.</p> <p>Usage</p> <pre><code>db-replace DB TABLE SEARCH REPLACE [DELIMITER]\n\nParams:\nDB                 Database name\nTABLE              Table name\nSEARCH             Search string\nREPLACE            Replace string\nDELIMITER          Delimiter for 'sed', defaults to '@'\n</code></pre>"},{"location":"lib/dev/","title":"Development Tools","text":"<p>This section provides a range of utilities and functions to assist in the development process.</p>"},{"location":"lib/dev/#build-mkdocs","title":"build-mkdocs","text":"<p>Build an MkDocs site (like this one ). The generated site's permissions and group are changed for serving through Apache (<code>www-data</code>).</p> <p>Usage</p> <pre><code>build-mkdocs CONFIG DESTINATION [EXTRA]...\n\nParams:\nCONFIG             MkDocs config file path\nDESTINATION        Destination dir for generated static site\nEXTRA              Optional extra params to 'mkdocs build'\n</code></pre>"},{"location":"lib/dev/#bump-version","title":"bump-version","text":"<p>Function to increment (increase by one) the version number if Semantic Versioning is used. If the major or minor version is bumped, the less important parts will be reset. E.g. <code>1.2.3</code> becomes <code>2.0.0</code> after bumping major version.</p> <p>Usage</p> <pre><code>bump-version VERSION PART\n\nParams:\nVERSION            Current version.\n                   Must be in x.y.z format where x,y and z are integers.\nPART               Which part of the version to increase (major, minor, patch)\n</code></pre>"},{"location":"lib/dev/#debug-tunnel-open","title":"debug-tunnel-open","text":"<p>Open an SSH tunnel to a remote XDebug host, allowing you to debug remote PHP applications. This can be very handy to track down nasty bugs on production servers. Though it's generally advised to never debug in production environment, in some cases - if used correctly - this can save so much time...</p> <p>Usage</p> <pre><code>debug-tunnel-open REMOTE\n\nParams:\nREMOTE             Remote host\n</code></pre>"},{"location":"lib/dev/#debug-tunnel-close","title":"debug-tunnel-close","text":"<p>Close a previously opened SSH tunnel by <code>debug-tunnel-open</code>.</p> <p>Usage</p> <pre><code>debug-tunnel-close REMOTE\n\nParams:\nREMOTE             Remote host\n</code></pre>"},{"location":"lib/dev/#ppretty-json","title":"ppretty-json","text":"<p>Pretty prints JSON string. Can accept JSON from stdin also so it's great to use in a pipe.</p> <p>Usage</p> <pre><code>ppretty-json [JSON]\n\nParams:\nJSON               JSON string. If not supplied read from stdin.\n</code></pre>"},{"location":"lib/dev/#ppretty-php","title":"ppretty-php","text":"<p>Pretty prints a serialized PHP object/array. Can accept serial string from stdin also so it's great to use in a pipe.</p> <p>Usage</p> <pre><code>ppretty-php [SERIAL]\n\nParams:\nSERIAL             Serialized string. If not supplied read from stdin.\n</code></pre>"},{"location":"lib/error/","title":"Error handling","text":"<p>Functions for handling errors.</p>"},{"location":"lib/error/#error-codes","title":"Error codes","text":"<p>The following variables contain error codes that are exported so they can be used in other scripts as environment variables to indicate error reasons.</p> <pre><code>_E_ABORT           Program aborted\n_E_MISSING         Missing argument\n_E_NO_CHANGE       Report no change. This can be used for idempotent scripts.\n</code></pre> <p>Usage</p> <pre><code>exit \"${_E_ABORT}\"\n</code></pre>"},{"location":"lib/error/#abort","title":"abort","text":"<p>Print error message (\"aborted\") and exit program with <code>_E_ABORT</code> exit code. Use this in standalone scripts. If used on the command line it exits your shell.</p> <p>Usage</p> <pre><code>abort\n</code></pre>"},{"location":"lib/error/#error-exit","title":"error-exit","text":"<p>Print error message and exit program. Use this in standalone scripts. If used on the command line it exits your shell.</p> <p>Usage</p> <pre><code>error-exit MESSAGE CODE\n\nParams:\nMESSAGE            Error message\nCODE               Exit code, defaults to '1'\n</code></pre>"},{"location":"lib/files/","title":"Files","text":"<p>Functions for managing files and querying the filesystem.</p>"},{"location":"lib/files/#dir-file","title":"dir-file","text":"<p>Get the directory of a file.</p> <p>Usage</p> <pre><code>dir-file FILE\n\nParams:\nFILE               File to check\n</code></pre>"},{"location":"lib/files/#dir-parents","title":"dir-parents","text":"<p>Retrieve all parent directories of a dir. By default, return parents as a space-separated string. The separator character can be specified if directories containing whitespace are a concern.</p> <p>Usage</p> <pre><code>dir-parents DIRECTORY SEPARATOR\n\nParams:\nDIRECTORY          Directory to check. Defaults to current dir.\nSEPARATOR          Separator character. Defaults to space.\n</code></pre>"},{"location":"lib/files/#dir-script","title":"dir-script","text":"<p>Get directory of currently running script.</p> <p>Usage</p> <pre><code>dir-script\n</code></pre>"},{"location":"lib/files/#give","title":"give","text":"<p>Recursively set group ownership and remove all world (public) permissions on directories.</p> <p>Usage</p> <pre><code>give GROUP DIRECTORY...\n\nParams:\nGROUP             Group name\nDIRECTORY         Directory to set permissions\n</code></pre>"},{"location":"lib/git/","title":"Git","text":"<p>Wrappers and helpers for <code>git</code>.</p>"},{"location":"lib/git/#ggit-adog","title":"ggit-adog","text":"<p>Show git log as a nice graph.</p> <p>Usage</p> <pre><code>ggit-adog\n</code></pre>"},{"location":"lib/git/#ggit-base","title":"ggit-base","text":"<p>Rebase source branch onto target branch and forcefully push the rebased branch to the remote repository.</p> <p>Usage</p> <pre><code>ggit-base [SOURCE] [TARGET] [REMOTE]\nggit-base SOURCE... TARGET REMOTE\n\nParams:\nSOURCE             Branch to be rebased. Defaults to current branch in the first form.\nTARGET             Rebase onto this branch. Defaults to 'main' in the first form.\nREMOTE             Remote repository to pull and push. Defaults to 'origin' in the first form.\n</code></pre>"},{"location":"lib/git/#ggit-diff","title":"ggit-diff","text":"<p>Show a summarized difference: list changed files and the number of changed lines.</p> <p>Usage</p> <pre><code>ggit-diff BRANCH_A BRANCH_B\n\nParams:\nBRANCH_A           Branch to compare against\nBRANCH_B           Branch to compare with\n</code></pre>"},{"location":"lib/git/#ggit-fix","title":"ggit-fix","text":"<p>Start interactive rebase to change history: squash, reorder and delete commits, change commit message, etc. Need to specify how many commits to involve from HEAD. Giving \"1\" means edit last commit.</p> <p>Usage</p> <pre><code>ggit-fix COMMITS\n\nParams:\nCOMMITS            Numer of commits to go back from HEAD\n</code></pre>"},{"location":"lib/git/#ggit-merge","title":"ggit-merge","text":"<p>Merge the source branch into the target branch (performs a fast-forward merge). This includes several steps:</p> <ol> <li>Checkout source branch and pull remote changes from remote repo</li> <li>Checkout target branch and pull remote changes from remote repo</li> <li>Merge source branch</li> <li>Push target branch</li> <li>Delete merged branches (local &amp; remote tracking)</li> </ol> <p>Usage</p> <pre><code>ggit-merge [SOURCE] [TARGET] [REMOTE]\n\nParams:\nSOURCE             Branch to be merged. Defaults to current branch.\nTARGET             Branch to merge into. Defaults to 'main'.\nREMOTE             Remote repository to pull and push. Defaults to 'origin'.\n</code></pre>"},{"location":"lib/git/#ggit-patch","title":"ggit-patch","text":"<p>Create patch from any commit and apply to HEAD.</p> <p>Usage</p> <pre><code>ggit-patch SHA...\n\nParams:\nSHA                Create patch from this commit specified by SHA\n</code></pre>"},{"location":"lib/git/#ggit-pull","title":"ggit-pull","text":"<p>Pull the local branch from the remote repository, also updating any submodules.</p> <p>Usage</p> <pre><code>ggit-pull [BRANCH] [REMOTE]\n\nParams:\nBRANCH             Branch to pull. Defaults to 'main'.\nREMOTE             Remote repository to pull. Defaults to 'origin'.\n</code></pre>"},{"location":"lib/git/#ggit-report","title":"ggit-report","text":"<p>Show git status, list all branches and remotes.</p> <p>Usage</p> <pre><code>ggit-report\n</code></pre>"},{"location":"lib/git/#ggit-stat-daily","title":"ggit-stat-daily","text":"<p>Show commit statistics: number of commits grouped by hour of the day.</p> <p>Usage</p> <pre><code>ggit-stat-daily [AFTER] [BEFORE]\n\nParams:\nAFTER              Only count commits after this date\nBEFORE             Only count commits before this date\n</code></pre>"},{"location":"lib/git/#ggit-stat-monthly","title":"ggit-stat-monthly","text":"<p>Show commit statistics: number of commits grouped by day of the month.</p> <p>Usage</p> <pre><code>ggit-stat-monthly [AFTER] [BEFORE]\n\nParams:\nAFTER              Only count commits after this date\nBEFORE             Only count commits before this date\n</code></pre>"},{"location":"lib/git/#ggit-stat-weekly","title":"ggit-stat-weekly","text":"<p>Show commit statistics: number of commits grouped by day of the week.</p> <p>Usage</p> <pre><code>ggit-stat-weekly [AFTER] [BEFORE]\n\nParams:\nAFTER              Only count commits after this date\nBEFORE             Only count commits before this date\n</code></pre>"},{"location":"lib/git/#ggit-tag","title":"ggit-tag","text":"<p>Create a signed tag &amp; push to remote.</p> <p>Usage</p> <pre><code>ggit-tag NAME [COMMIT] [MESSAGE] [REMOTE]\n\nParams:\nNAME               Tag name\nCOMMIT             Commit to tag. Defaults to HEAD.\nMESSAGE            Tag message. Defaults to same as tag name.\nREMOTE             Remote repository to push. Defaults to 'origin'.\n</code></pre>"},{"location":"lib/git/#ggit-update","title":"ggit-update","text":"<p>WARNING: this is a forced operation, local branch will be deleted!</p> <p>Update local branch from remote. It deletes and recreates the branch from remote, rather than doing a rebase or some merge/pull. This comes handy if a branch was rebased on remote and a simple pull is not working. This way you can have the same commits (and history) as remote.</p> <p>Usage</p> <pre><code>ggit-update [BRANCH] [REMOTE]\n\nParams:\nBRANCH             Branch to update. Defaults to current branch.\nREMOTE             Remote repository, defaults to 'origin'.\n</code></pre>"},{"location":"lib/git/#ggit-version","title":"ggit-version","text":"<p>Create &amp; push a new version tag to remote. Version tag format is: <code>vx.y.z</code> (semantic versioning). Next version number is deducted from last version tag with specified part bumped (major, minor or patch).</p> <p>Usage</p> <pre><code>ggit-version PART [COMMIT] [REMOTE]\n\nParams:\nPART               Which part of the version to increase (major, minor, patch)\nCOMMIT             Commit to tag. Defaults to HEAD.\nREMOTE             Remote repository to push. Defaults to 'origin'.\n</code></pre>"},{"location":"lib/github/","title":"GitHub","text":"<p>Wrapper for GitHub CLI tool: <code>gh</code>.</p>"},{"location":"lib/github/#ghub-foreach-owner","title":"ghub-foreach-owner","text":"<p>Run a <code>gh</code> command for each repository of a user. Useful to run any other function in this category for each repo. E.g. Open all repository in the browser: <code>ghub-foreach-owner OWNER ghub-open</code>.</p> <p>Usage</p> <pre><code>ghub-foreach-owner OWNER COMMAND [ARGS]...\n\nParams:\nOWNER              Owner, GitHub user or organization\nCOMMAND            Command to run for each repo\nARGS               Optional extra params to COMMAND.\n                   REPO is always passed to COMMAND as first argument.\n</code></pre>"},{"location":"lib/github/#ghub-foreach-topic","title":"ghub-foreach-topic","text":"<p>Run a <code>gh</code> command for each repository of a user, filtered by topic. Useful to run any other function in this category for each repo. E.g. Sync labels from master repo: <code>ghub-foreach-topic OWNER TOPIC ghub-sync-labels TEMPLATE</code>.</p> <p>Usage</p> <pre><code>ghub-foreach-topic OWNER TOPIC COMMAND [ARGS]...\n\nParams:\nOWNER              Owner, GitHub user or organization\nTOPIC              Match repos only with this topic\nCOMMAND            Command to run for each matched repo\nARGS               Optional extra params to COMMAND.\n                   REPO is always passed to COMMAND as first argument.\n</code></pre>"},{"location":"lib/github/#ghub-get","title":"ghub-get","text":"<p>Get names of all repos for a GitHub account. Names are returned as a list, each repo on a separate line. Useful for completion scripts for other functions in this category.</p> <p>Usage</p> <pre><code>ghub-get OWNER [EXTRA]...\n\nParams:\nOWNER              Owner, GitHub user or organization\nEXTRA              Optional extra params to 'gh'\n</code></pre>"},{"location":"lib/github/#ghub-issue","title":"ghub-issue","text":"<p>Create issue for repository and open in browser.</p> <p>Usage</p> <pre><code>ghub-issue REPO [EXTRA]...\n\nParams:\nREPO               GitHub repository, given as \"owner/repo-name\".\n                   Default to repository in current working dir.\nEXTRA              Optional extra parameters to 'gh'\n</code></pre>"},{"location":"lib/github/#ghub-list","title":"ghub-list","text":"<p>Listing of repos for a GitHub account.</p> <p>Usage</p> <pre><code>ghub-list OWNER [EXTRA]...\n\nParams:\nOWNER              Owner, GitHub user or organization\nEXTRA              Optional extra params to 'gh'\n</code></pre>"},{"location":"lib/github/#ghub-list-license","title":"ghub-list-license","text":"<p>List repositories for a GitHub account with license info.</p> <p>Usage</p> <pre><code>ghub-list-license OWNER [EXTRA]...\n\nParams:\nOWNER              Owner, GitHub user or organization\nEXTRA              Optional extra params to 'gh'\n</code></pre>"},{"location":"lib/github/#ghub-open","title":"ghub-open","text":"<p>Open GitHub repository page in web browser.</p> <p>Usage</p> <pre><code>ghub-open REPO [EXTRA]...\n\nParams:\nREPO               GitHub repository, given as \"owner/repo-name\".\n                   Default to repository in current working dir.\nEXTRA              Optional extra params to 'gh'\n</code></pre>"},{"location":"lib/github/#ghub-pr","title":"ghub-pr","text":"<p>Create PR (pull request) in browser for current repository (repo in working dir).</p> <p>Usage</p> <pre><code>ghub-pr TITLE BODY [EXTRA]...\n\nParams:\nTITLE              PR title\nBODY               PR body: a string or a file that contains the body\nEXTRA              Optional extra params to 'gh'\n</code></pre>"},{"location":"lib/github/#ghub-repo-clone","title":"ghub-repo-clone","text":"<p>Clone repository.</p> <p>Usage</p> <pre><code>ghub-repo-clone REPO [EXTRA]...\n\nParams:\nREPO               Desired GitHub repository name, given as \"owner/repo-name\"\nEXTRA              Optional extra params to 'gh'\n</code></pre>"},{"location":"lib/github/#ghub-repo-new","title":"ghub-repo-new","text":"<p>Create new repository.</p> <p>Usage</p> <pre><code>ghub-repo-new REPO [EXTRA]...\n\nParams:\nREPO               Desired GitHub repository name, given as \"owner/repo-name\"\nEXTRA              Optional extra params to 'gh'\n</code></pre>"},{"location":"lib/github/#ghub-repo-template","title":"ghub-repo-template","text":"<p>Create new private repository from GitHub template repository.</p> <p>Usage</p> <pre><code>ghub-repo-template REPO TEMPLATE [TOPIC]...\n\nParams:\nREPO               Desired GitHub repository name, given as \"owner/repo-name\"\nTEMPLATE           Template GitHub repository, given as \"owner/repo-name\"\nTOPIC              Topics to add to repo\n</code></pre>"},{"location":"lib/github/#ghub-secret-set","title":"ghub-secret-set","text":"<p>Set a repository secret for GitHub Actions.</p> <p>Usage</p> <pre><code>ghub-secret-set REPO NAME VALUE [EXTRA]...\n\nParams:\nREPO               GitHub repository, given as \"owner/repo-name\"\nNAME               Secret name\nVALUE              Secret value\nEXTRA              Optional extra params to 'gh'\n</code></pre>"},{"location":"lib/github/#ghub-settings","title":"ghub-settings","text":"<p>Open GitHub repository settings page in web browser.</p> <p>Usage</p> <pre><code>ghub-settings REPO [EXTRA]...\n\nParams:\nREPO               GitHub repository, given as \"owner/repo-name\".\n                   Default to repository in current working dir.\nEXTRA              Optional extra params to 'gh'\n</code></pre>"},{"location":"lib/github/#ghub-sync-config","title":"ghub-sync-config","text":"<p>Update configs to default values.</p> <p>Usage</p> <pre><code>ghub-sync-config REPO [EXTRA]...\n\nParams:\nREPO               GitHub repository, given as \"owner/repo-name\"\nEXTRA              Optional extra params to 'gh'\n</code></pre>"},{"location":"lib/github/#ghub-sync-labels","title":"ghub-sync-labels","text":"<p>Sync labels from template repository to target repository. Non-existent labels will be created, extra ones deleted, different ones updated to match template. After this operation labels will the same as the template. Matching is based on label name.</p> <p>Usage</p> <pre><code>ghub-sync-labels REPO TEMPLATE\n\nParams:\nREPO               GitHub repository, given as \"owner/repo-name\" to sync\nTEMPLATE           GitHub repository, given as \"owner/repo-name\" used as template for syncing\n</code></pre>"},{"location":"lib/github/#ghub-topic","title":"ghub-topic","text":"<p>Add topic(s) to repository.</p> <p>Usage</p> <pre><code>ghub-topic REPO [TOPIC]...\n\nParams:\nREPO               GitHub repository, given as \"owner/repo-name\"\nTOPIC              Topics to add to repo\n</code></pre>"},{"location":"lib/network/","title":"Networking","text":"<p>Utilities for networking.</p>"},{"location":"lib/network/#dns-mail","title":"dns-mail","text":"<p>Retrieve email related DNS records: MX, SPF (Sender Policy Framework: a method to detect forged sender addresses), DMARC (Domain-based Message Authentication, Reporting &amp; Conformance: an email policy, and reporting protocol) and DKIM (DomainKeys Identified Mail: an authentication method to digitally sign emails).</p> <p>Usage</p> <pre><code>dns-mail DOMAIN SELECTOR\n\nParams:\nDOMAIN             Domain to inspect\nSELECTOR           DKIM selector\n</code></pre>"},{"location":"lib/network/#iplocation","title":"iplocation","text":"<p>Query Ipstack for GeoIP data. You need an Ipstack account and an access key to query information. This function looks for this token in an environment variable: <code>IPSTACK_TOKEN</code>. You can configure this in your <code>.bashrc</code> or if you prefer not to provide credentials in env vars, you can give token just for this command: <code>IPSTACK_TOKEN=yourtoken iplocation 8.8.8.8</code>.</p> <p>Usage</p> <pre><code>iplocation [IP]...\n\nParams:\nIP                 IP address to check\n</code></pre>"},{"location":"lib/network/#whatsmyip4","title":"whatsmyip4","text":"<p>Return you own external IPv4 address. Retrieved from Google nameservers.</p> <p>Usage</p> <pre><code>whatsmyip4\n</code></pre>"},{"location":"lib/network/#whatsmyip6","title":"whatsmyip6","text":"<p>Return you own external IPv6 address. Retrieved from Google nameservers.</p> <p>Usage</p> <pre><code>whatsmyip6\n</code></pre>"},{"location":"lib/process/","title":"Process","text":"<p>Functions for managing processes.</p>"},{"location":"lib/process/#check-not-root","title":"check-not-root","text":"<p>Check if script is not running as root. If running as root, print an error and return with non-zero exit code.</p> <p>Usage</p> <pre><code>check-not-root\n</code></pre>"},{"location":"lib/process/#check-root","title":"check-root","text":"<p>Determine if script is running as root. If not running as root, print an error and return with non-zero exit code.</p> <p>Usage</p> <pre><code>check-root\n</code></pre>"},{"location":"lib/process/#command-exists","title":"command-exists","text":"<p>Verify if command is available on the system. Return non-zero exit code if the command is not available.</p> <p>Usage</p> <pre><code>command-exists COMMAND\n\nParams:\nCOMMAND            Command to check\n</code></pre>"},{"location":"lib/process/#foreach-subdir","title":"foreach-subdir","text":"<p>Run a command in each subdirectory of current working dir. Commands are executed in a subshell, so they will continue on errors and have no effect on the current shell.</p> <p>Usage</p> <pre><code>foreach-subdir COMMAND\n\nParams:\nCOMMAND            Command to run\n</code></pre>"},{"location":"lib/process/#foreach-subdir-pipe","title":"foreach-subdir-pipe","text":"<p>Run command in each sub directory of current working dir and pipe results to another command. Commands are executed in a nested shell so they will continue on errors and have no effect on the current shell.</p> <p>Usage</p> <pre><code>foreach-subdir-pipe COMMAND PIPE\n\nParams:\nCOMMAND            Command to run\nPIPE               Command to pipe to\n</code></pre>"},{"location":"lib/process/#monitor-proc-memory","title":"monitor-proc-memory","text":"<p>Monitor memory usage - actually resident set size (RSS), the non-swapped physical memory that a process has used. Memory usage is printed on every seconds. Peak RSS is saved and printed on screen also.</p> <p>Usage</p> <pre><code>monitor-proc-memory COMMAND\n\nParams:\nCOMMAND            Command optionally with arguments\n</code></pre>"},{"location":"lib/process/#proc-is-running","title":"proc-is-running","text":"<p>Check if process is running. Return non-zero exit code if not running.</p> <p>Usage</p> <pre><code>proc-is-running COMMAND\n\nParams:\nCOMMAND            Command to check\n</code></pre>"},{"location":"lib/ssh/","title":"SSH","text":"<p>Helper functions for SSH.</p>"},{"location":"lib/ssh/#socks5-tunnel-close","title":"socks5-tunnel-close","text":"<p>Close a previously opened SOCKS5 tunnel. Open a tunnel with <code>socks5-tunnel-open</code> and use the same parameters to close it.</p> <p>Usage</p> <pre><code>socks5-tunnel-close HOST PORT\n\nParams:\nHOST               Remote host (IP or hostname)\nPORT               Local port\n</code></pre>"},{"location":"lib/ssh/#socks5-tunnel-open","title":"socks5-tunnel-open","text":"<p>Open a SOCKS5 tunnel to a remote host. An IP address or hostname can also be used. With this tunnel, you can route your HTTP traffic through the secure (SSH) tunnel and use the remote host as your proxy.</p> <p>Usage</p> <pre><code>socks5-tunnel-open HOST PORT\n\nParams:\nHOST               Remote host (IP or hostname)\nPORT               Local port\n</code></pre>"},{"location":"lib/ssh/#ssh-create-key","title":"ssh-create-key","text":"<p>Generate a new ed25519 SSH key-pair. The key is saved in the current directory, and the private key undergoes 96 rounds of hashing.</p> <p>Usage</p> <pre><code>ssh-create-key NAME COMMENT [EXTRA]...\n\nParams:\nNAME               Key name\nCOMMENT            Key comment\nEXTRA              Optional extra params to 'ssh-keygen'\n</code></pre>"},{"location":"lib/ssh/#ssh-sign-user","title":"ssh-sign-user","text":"<p>Sign a user's public key with a Certificate Authority (CA) key. This creates a certificate that can be used for authenticating to an SSH server. The server then only needs to trust the CA certificate not every single user's public key.</p> <p>Usage</p> <pre><code>ssh-sign-user VALIDITY CA_KEY ID PRINCIPALS SERIAL PUBLIC_KEY [EXTRA]...\n\nParams:\nVALIDITY           Certificate validity, e.g. +52w\nCA_KEY             CA key file\nID                 Key identity (this will be logged later when authenticating to ssh)\nPRINCIPALS         Principals: username for this cert is valid\nSERIAL             Certificate serial number\nPUBLIC_KEY         Public key, this will be signed\nEXTRA              Optional extra params to 'ssh-keygen'\n</code></pre>"},{"location":"lib/ssh/#ssh-tunnel-close","title":"ssh-tunnel-close","text":"<p>Close a previously opened SSH tunnel. If opened by <code>ssh-tunnel-open</code> you need to give the same params. Before closing check if still exists and check again after closing to confirm.</p> <p>Usage</p> <pre><code>ssh-tunnel-close [EXTRA]...\n\nParams:\nEXTRA              Optional extra params to 'ssh'\n</code></pre>"},{"location":"lib/ssh/#ssh-tunnel-open","title":"ssh-tunnel-open","text":"<p>Open an SSH tunnel. This is a general, backend function (this is used by <code>socks5-tunnel-open</code>) but can be used on it's own. Before opening a new tunnel check if already exists and check again after opening to confirm.</p> <p>Usage</p> <pre><code>ssh-tunnel-open [EXTRA]...\n\nParams:\nEXTRA              Optional extra params to 'ssh'\n</code></pre>"},{"location":"lib/ssh/#ssh-view-cert","title":"ssh-view-cert","text":"<p>Inspect a certificate. Print certificate to stdout.</p> <p>Usage</p> <pre><code>ssh-view-cert CERT [EXTRA]...\n\nParams:\nCERT               Certificate file\nEXTRA              Optional extra params to 'ssh-keygen'\n</code></pre>"},{"location":"lib/ssh/#unlock-key","title":"unlock-key","text":"<p>Add a password protected SSH key to <code>ssh-agent</code> so it can be used without prompting for password until cache time expires. Password is retrieved from <code>pass</code> password manager utility.</p> <p>Usage</p> <pre><code>unlock-key KEY PASS_PATH [CACHE_TIME]\n\nParams:\nKEY                Private key file\nPASS_PATH          Path to password in 'pass'\nCACHE_TIME         Set a maximum lifetime when adding SSH keys to 'ssh-agent'.\n                   Cache time may be specified in seconds or in a time format supported by 'ssh'.\n                   Defaults to 12 hours.\n</code></pre>"},{"location":"lib/text/","title":"Text processing","text":"<p>Bash functions for text processing &amp; strings.</p>"},{"location":"lib/text/#implode","title":"implode","text":"<p>Concatenate arguments using a specified joining character, similar to other programming languages. This can be useful to create, e.g. a comma-delimited list from an array of names.</p> <p>Usage</p> <pre><code>implode CHAR [ITEM]...\n\nParams:\nCHAR               Joining character\nITEM               Strings to join\n</code></pre>"},{"location":"lib/text/#lines-dir","title":"lines-dir","text":"<p>Count total lines of all files in a directory. This function works well only with text files. If you're curious about how many lines of code are in that <code>src/</code> dir...</p> <p>Usage</p> <pre><code>lines-dir DIR [EXTRA]...\n\nParams:\nDIR                Directory to count\nEXTRA              Optional extra params to 'find'\n</code></pre>"},{"location":"lib/text/#read-file-cfg","title":"read-file-cfg","text":"<p>Read a config file. Blank lines (consisting only of whitespace) and comments (lines starting with <code>#</code>) are removed. Sections are marked with square brackets, and you can choose to return all sections or just one. Content inside sections are returned unparsed, so format is up to you (square brackets: <code>[</code>, <code>]</code> can't be used though).</p> <p>Config file example:</p> <pre><code># This is a comment\n\n  # Whitespace allowed before comments\n[section]\nsome options\nformat=no\nwhich;is;best;suited\n[other section]\n</code></pre> <p>Usage</p> <pre><code>read-file-cfg FILE [SECTION]\n\nParams:\nFILE               Config file to parse\nSECTION            Optional section. If specified read only this section.\n</code></pre>"},{"location":"lib/text/#urldecode","title":"urldecode","text":"<p>Decode URL-encoded strings.</p> <p>Usage</p> <pre><code>urldecode STRING\n\nParams:\nSTRING             URL-encoded string\n</code></pre>"},{"location":"lib/text/#urlencode","title":"urlencode","text":"<p>URL-encode strings.</p> <p>Usage</p> <pre><code>urlencode STRING\n\nParams:\nSTRING             String to encode\n</code></pre>"},{"location":"lib/ui/","title":"User Interface","text":"<p>Bash functions for interacting with users on the command line.</p> <p>Info</p> <p>You can hush the print functions (<code>print-*</code>) through the <code>ES_PRINT_HUSH</code> environment variable. If this variable is set (to any value other than an empty string) nothing will be echoed on terminal. This is useful for creating quiet/verbose scripts as printing can be easily switched on or off.</p>"},{"location":"lib/ui/#format-codes","title":"Format codes","text":"<p>Color and format codes used by <code>echo</code>. These codes are exported as environment variables, making them available for any other script or function. Codes can be combined.</p> <pre><code>Font colors:\nTXT_BLACK          Black\nTXT_RED            Red\nTXT_GREEN          Green\nTXT_YELLOW         Yellow\nTXT_BLUE           Blue\nTXT_PURPLE         Magenta\n\nBackground colors:\nBACK_YELLOW        Yellow\nBACK_BLUE          Blue\n\nOther:\nTXT_BOLD           Bold fonts\nTXT_NORM           Clear all formatting.\n                   Useful after formatted text, so next echo prints unformatted chars.\n</code></pre> <p>Usage</p> <pre><code>echo -e \"${TXT_BOLD}${TXT_YELLOW}I'm in bold yellow${TXT_NORM} This is unformatted text\"\n</code></pre>"},{"location":"lib/ui/#cls","title":"cls","text":"<p>Clear console screen. You can't even scroll up after this.</p> <p>Usage</p> <pre><code>cls\n</code></pre>"},{"location":"lib/ui/#confirm","title":"confirm","text":"<p>Ask for confirmation. If reply is <code>y</code> or <code>Y</code> return with exit code \"0\" otherwise non-zero. You can configure the prompt, but the default 'Are you sure?' should suffice for most situations. </p> <p>Usage</p> <pre><code>confirm [PROMPT]\n\nParams:\nPROMPT             Question prompt. Defaults to \"Are you sure? (y/n) \"\n</code></pre>"},{"location":"lib/ui/#print-error","title":"print-error","text":"<p>Print error message to stderr. Red, bold.</p> <p>Usage</p> <pre><code>print-error MESSAGE\n\nParams:\nMESSAGE            Error message\n</code></pre>"},{"location":"lib/ui/#print-finish","title":"print-finish","text":"<p>Print OK message in green with bold letters.</p> <p>Usage</p> <pre><code>print-finish [MESSAGE]\n\nParams:\nMESSAGE            Message to print, default: \"Done.\"\n</code></pre>"},{"location":"lib/ui/#print-header","title":"print-header","text":"<p>Print header: text with yellow font-color on its own line.</p> <p>Usage</p> <pre><code>print-header HEADER\n\nParams:\nHEADER             Header text\n</code></pre>"},{"location":"lib/ui/#print-run-time","title":"print-run-time","text":"<p>Print running time of script in a nice summary format. Seconds converted to hours, mins e.g. 3665 seconds =&gt; 1 hour(s) 1 min(s) 5 second(s). Could be useful for long-running overnight scripts.</p> <p>Usage</p> <pre><code>print-run-time\n</code></pre>"},{"location":"lib/ui/#print-section","title":"print-section","text":"<p>Print section header: blue background and white letters followed by a line of <code>~</code> chars as wide as the header.</p> <p>Usage</p> <pre><code>print-section HEADER\n\nParams:\nHEADER             Header text\n</code></pre>"},{"location":"lib/ui/#print-status","title":"print-status","text":"<p>Print yellow status message. No new line is printed after that so next echo continues on same line!</p> <p>Usage</p> <pre><code>print-status MESSAGE\n\nParams:\nMESSAGE            Status message\n</code></pre>"},{"location":"lib/ui/#print-title","title":"print-title","text":"<p>Print title: blue background and white letters followed by a line of <code>~</code> chars. Title is centered add padded with whitespace to 80 characters wide so the whole title line is highlighted in blue.</p> <p>Usage</p> <pre><code>print-title TITLE\n\nParams:\nTITLE              Title text\n</code></pre>"},{"location":"lib/ui/#print-warning","title":"print-warning","text":"<p>Print warning message to stderr with yellow background.</p> <p>Usage</p> <pre><code>print-warning [MESSAGE]\n\nParams:\nMESSAGE            Warning message\n</code></pre>"}]}