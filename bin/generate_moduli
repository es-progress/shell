#!/usr/bin/env bash
#############################
## ES-Ubuntu               ##
##                         ##
## generate_moduli         ##
##                         ##
## Regenerate moduli for   ##
## Diffie-Hellman protocol ##
#############################

##########
# CONFIG #
##########

bits_generate="4096 6144 7680 8192"
tmp_file_prefix="DH_prime"
results_file="DH_moduli"

#############
# FUNCTIONS #
#############

# Generate primes for DH-GEX
#
# @param    $1  Lenght of primes in bits
# @param    $2  Output file path
########################################
generate_DH_primes(){
    local bit="${1?:"Bit missing"}"
    local output_file="${2?:"Output file name missing"}"

    # Generate candidates
    ssh-keygen -M generate -O bits="${bit}" -- "${output_file}.candidates"

    # Screen candidates
    ssh-keygen -M screen -f "${output_file}.candidates" -- "${output_file}"

    # Delete candidates
    rm -f "${output_file}.candidates"
}

################
# SCRIPT START #
################

# Strict mode minus IFS
set -euo pipefail

# Import library
source "${PATH_SOURCER}"

# Parse options
bits="${1:-}"
output="${2:-}"
prefix="${3:-}"

# Defaults
[[ -z "${bits}" ]] && bits="${bits_generate}"
[[ -z "${output}" ]] && output="${tmp_file_prefix}"
[[ -z "${prefix}" ]] && prefix="${results_file}"

# Validate bits
for bit in ${bits}; do
    [[ "${bit}" =~ ^[0-9]+$ ]] || {
        echo "Only integers as BIT_SIZE."
        exit 1
    }
done

# Create summary file
echo "# Time Type Tests Tries Size Generator Modulus" > "${results_file}"

# Generate for different bits
for bit in ${bits}; do

    # Parallel processing
    for serial in {1..3}; do
        (
            temp_file="${tmp_file_prefix}_${bit}_${serial}"

            generate_DH_primes "${bit}" "${temp_file}"

            # Add primes to results
            cat "${temp_file}" >> "${results_file}"

            # Delete temp file
            rm -f "${temp_file}"
        ) &
    done

    # Wait for subshells to finish then go to next round
    wait

done

print-finish

found=$(wc -l < "${results_file}")
echo "Primes found: $((found - 1))"

print-run-time

exit 0
