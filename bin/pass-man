#!/usr/bin/env bash
#####################################
## ES-Ubuntu                       ##
##                                 ##
## pass-man                        ##
##                                 ##
## Manages a 'pass' password-store ##
## which is inside a tomb.         ##
#####################################

##########
# CONFIG #
##########

# Timer to close tomb automatically
timer=6h

#############
# FUNCTIONS #
#############

# Usage
#######
usage() {
    cat <<HELP

pass-man v0.9.1
Written by Sandor Semsey, Copyright(C) 2020, License MIT

Usage: vault ACTION [TARGET] [OPTIONS]

ACTION:     open, close, generate, retrieve
TARGET:     Path to password (mandatory for 'retrieve' action)
OPTIONS:    Extra arguments to 'pass'
HELP
    exit 1
}

# Check if tomb is opened
#########################
check_tomb_open() {
    if tomb list >/dev/null 2>&1; then
        return 0
    else
        return 1
    fi
}

# Open vault
############
vault_open() {
    if ! check_tomb_open; then
        pass open -f --timer=${timer}

        if ! check_tomb_open; then
            echo "Tomb could not be opened." >&2
            exit 1
        fi
    fi
}

# Close vault
#############
vault_close() {
    if check_tomb_open; then
        pass close

        if check_tomb_open; then
            echo "Tomb could not be closed." >&2
            exit 1
        fi
    fi
}

# Generate new password
#######################
vault_generate() {
    vault_open
    pass generate -f aaa_tmp
}

# Get pass from vault
#
# @param    $1  Path to password
# @param    $2  Extra arguments to 'pass'
#########################################
vault_retrieve() {
    local path="${1?:"Path to password missing"}"
    shift
    vault_open
    pass "${@}" "${path}"
}

################
# SCRIPT START #
################

# Strict mode
set -euo pipefail
IFS=$'\n\t'

# Parse options
action="${1:-}"
pass_path="${2:-}"
[[ -z "${action}" ]] && echo "Action missing" && usage
if [[ $# -ge 2 ]]; then
    shift 2
elif [[ $# -eq 1 ]]; then
    shift
fi

# Switch action
case "${action}" in
    open)
        vault_open
        ;;
    close)
        vault_close
        ;;
    generate)
        vault_generate
        ;;
    retrieve)
        [[ -z "${pass_path}" ]] && echo "Path to password missing" && usage
        vault_retrieve "${pass_path}" "${@}"
        ;;
    *)
        echo "Invalid action" && usage
        ;;
esac

exit 0
