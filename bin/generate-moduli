#!/usr/bin/env bash
# shellcheck disable=SC1090
#############################
## generate_moduli         ##
##                         ##
## Regenerate moduli for   ##
## Diffie-Hellman protocol ##
#############################

############
## CONFIG ##
############
bits_generate=(4096 6144 7680 8192)
tmp_file_prefix=DH_prime
results_file=DH_moduli

###############
## FUNCTIONS ##
###############

## Generate primes for DH-GEX
##
## @param    $1  Lenght of primes in bits
## @param    $2  Output file path
#########################################
_generate-DH-primes() {
    local bit="${1?:"Bit missing"}"
    local output_file="${2?:"Output file name missing"}"
    local candidates
    candidates=$(mktemp --tmpdir DH_candidates.XXXXXXXX)

    ssh-keygen -M generate -O bits="${bit}" -- "${candidates}"
    ssh-keygen -M screen -f "${candidates}" -- "${output_file}"
}

##################
## SCRIPT START ##
##################

# Strict mode
set -eufo pipefail
IFS=$'\n\t'

source "${PATH_SOURCER}"

# Parse options
IFS=$' \t' read -r -a bits <<<"${1:-}"
output="${2:-}"
prefix="${3:-}"

# Defaults
[[ -z "${bits[*]}" ]] && bits=("${bits_generate[@]}")
[[ -z "${output}" ]] && output="${tmp_file_prefix}"
[[ -z "${prefix}" ]] && prefix="${results_file}"

# Validate bits
for bit in "${bits[@]}"; do
    if [[ ! "${bit}" =~ ^[0-9]+$ ]]; then
        echo "Only integers as BIT_SIZE."
        exit 1
    fi
done

# Create summary file
echo "# Time Type Tests Tries Size Generator Modulus" > "${results_file}"

for bit in "${bits[@]}"; do
    # Parallel processing
    for _ in {1..3}; do
        (
            primes=$(mktemp --tmpdir DH_primes.XXXXXXXX)
            _generate-DH-primes "${bit}" "${primes}"
            cat "${primes}" >> "${results_file}"
        ) &
    done
    # Wait for subshells to finish then go to next round
    wait
done
print-finish

found=$(wc -l < "${results_file}")
echo "Primes found: $((found - 1))"

print-run-time

exit 0
