#!/bin/bash
##
## Gives directory (and all sub-directories) to user:
## 1. set owner
## 2. set group (same as owner)
## 3. set permissions (rwx to owner/group, rx to others)
##
## @author Sandor Semsey <semseysandor@gmail.com>
##
## @copyright 2020
## @license MIT https://choosealicense.com/licenses/mit/
##########################################################################

## Error codes
###################

E_INVALID_OPTIONS=50
E_MISSING_PARAMETERS=51
E_NOT_RUN_AS_ROOT=52
E_CHOWN_FAIL=62
E_CHGRP_FAIL=63
E_CHMOD_FAIL=64

## Functions
###################

## Error function
error() {
  e_code=$?
  echo "${1}: ${2} [${e_code}]" >&2
  exit $3
}

## Version info
version() {
cat <<-"VERSION"
give v0.9-beta
Written by Sandor Semsey, Copyright(C) 2020
License MIT https://choosealicense.com/licenses/mit/
VERSION
exit 0
}

## Usage
usage() {
  echo "Usage: give USER DIRECTORY"
}

## Help
helping() {
cat <<-"HELP"
Usage: give [OPTIONS] USER [DIRECTORY]

Gives DIRECTORY and subdirectories to USER
1. set owner
2. set group (same as owner)
3. set permissions (rwx to owner/group, rx to others)

OPTIONS
-d           print commands as executed
-v           print version information
-h           display this help

HELP
exit 0
}

## Parse options
###################
while getopts "dhv" opt; do
	case ${opt} in
		h) helping;;
		v) version;;
		d) set -x;;
		?) echo "Try 'give -h' for more information"; exit $E_INVALID_OPTIONS;;
	esac
done
shift $(($OPTIND -1))

## Script start
###################

## Check if run as root
[ $(id -u) -eq 0 ] || error "Please run as root" "give" $E_NOT_RUN_AS_ROOT

## Validating inputs
[ -n "$1" ] && user=$1 || { usage; error "User missing" "give" $E_MISSING_PARAMETERS; }
[ -n "$2" ] && dir=$2 || { usage; error "Directory missing" "give" $E_MISSING_PARAMETERS; }

chown -R $user $dir || error "Owner change failed" "chown" $E_CHOWN_FAIL
chgrp -R $user $dir || error "Group change failed" "chgrp" $E_CHGRP_FAIL
chmod -R 775 $dir || error "Permission change failed" "chmod" $E_CHMOD_FAIL

exit 0
